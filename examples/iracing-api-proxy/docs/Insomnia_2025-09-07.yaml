type: spec.insomnia.rest/5.0
name: iRacing Proxy
meta:
  id: wrk_29482eb891ab4664b6c7556b21de29b9
  created: 1757257445960
  modified: 1757257445960
  description: ""
collection:
  - url: "{{ _.base_url }}/driver"
    name: Fetch a driver from iRacing.
    meta:
      id: req_551d44732923461b842f29cd06bc0ec5
      created: 1757259339807
      modified: 1757259339807
      isPrivate: false
      description: ""
      sortKey: -1757259339807
    method: GET
    parameters:
      - name: iracingId
        disabled: false
        value: "378767"
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/league-membership"
    name: Fetch the league membership for a given iRacing user.
    meta:
      id: req_010d88eeb4d24fb6bad971a83b4150df
      created: 1757259339808
      modified: 1757259339808
      isPrivate: false
      description: ""
      sortKey: -1757259339808
    method: GET
    parameters:
      - name: iracingId
        disabled: false
        value: "378767"
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/team"
    name: Fetch a team from iRacing.
    meta:
      id: req_519be195ea4c484b90bd8951c52c2898
      created: 1757259339808
      modified: 1757259339808
      isPrivate: false
      description: ""
      sortKey: -1757259339808
    method: GET
    parameters:
      - name: iracingId
        disabled: false
        value: "129452"
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/league"
    name: Fetch a league from iRacing.
    meta:
      id: req_daf230eb03be44dca2033cca05b689df
      created: 1757259339808
      modified: 1757259339808
      isPrivate: false
      description: ""
      sortKey: -1757259339808
    method: GET
    parameters:
      - name: iracingId
        disabled: false
        value: "6529"
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_5b8feefaabb3a9f27b3b56efb0337c8ca2833659
    created: 1757257445964
    modified: 1757257445964
environments:
  name: Base Environment
  meta:
    id: env_5b8feefaabb3a9f27b3b56efb0337c8ca2833659
    created: 1757257445963
    modified: 1757259339806
    isPrivate: false
  data:
    base_url: "{{ _.scheme }}://{{ _.host }}{{ _.base_path }}"
  subEnvironments:
    - name: OpenAPI env example.com
      meta:
        id: env_b93f5b1f10aa40628085b86176cf3880
        created: 1757258785034
        modified: 1757258785034
        isPrivate: false
        sortKey: 1757258785034
      data:
        scheme: http
        base_path: ""
        host: example.com
    - name: OpenAPI env localhost:3000
      meta:
        id: env_6ed7c5ddf8b3433ba35e557ed1a9cb12
        created: 1757259130398
        modified: 1757259130398
        isPrivate: false
        sortKey: 1757259130398
      data:
        scheme: http
        base_path: ""
        host: localhost:3000
    - name: OpenAPI env localhost:3000
      meta:
        id: env_19fdac43e17946e287932832ce1cf38d
        created: 1757259339807
        modified: 1757259339807
        isPrivate: false
        sortKey: 1757259339807
      data:
        scheme: http
        base_path: ""
        host: localhost:3000
spec:
  contents:
    openapi: 3.1.0
    info:
      title: iRacing Proxy API
      version: 0.0.0
      description: An iRacing Proxy API implemented using @iracing-data/api
      contact:
        name: Justin Makaila
        email: justin@treehousetechnology.io
    servers:
      - url: http://localhost:{port}
        variables:
          port:
            enum:
              - "3000"
              - "3001"
              - "3002"
              - "8000"
              - "8001"
              - "8081"
            default: "3000"
    paths:
      /driver:
        get:
          summary: Fetch a driver from iRacing.
          operationId: fetchDriver
          tags:
            - driver
          parameters:
            - name: iracingId
              in: query
              description: The iRacing customer ID to fetch.
              required: true
              schema:
                type: integer
                example: 378767
          responses:
            "200":
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: object
            "400":
              description: Invalid or missing customer ID.
      /team:
        get:
          summary: Fetch a team from iRacing.
          operationId: fetchTeam
          tags:
            - team
          parameters:
            - name: iracingId
              in: query
              description: The iRacing team ID to fetch.
              required: true
              schema:
                type: integer
                example: 129452
          responses:
            "200":
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: object
            "400":
              description: Invalid or missing team ID.
      /league:
        get:
          summary: Fetch a league from iRacing.
          operationId: fetchLeague
          tags:
            - league
          parameters:
            - name: iracingId
              in: query
              description: The iRacing league ID to fetch.
              required: true
              schema:
                type: integer
                example: 6529
          responses:
            "200":
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: object
            "400":
              description: Invalid or missing league ID.
      /league-membership:
        get:
          summary: Fetch the league membership for a given iRacing user.
          operationId: fetchLeagueMembership
          tags:
            - driver
          parameters:
            - name: iracingId
              in: query
              description: The iRacing customer ID to fetch league membership of.
              required: true
              schema:
                type: integer
                example: 378767
          responses:
            "200":
              description: Successful operation
              content:
                application/json:
                  schema:
                    type: object
            "400":
              description: Invalid or missing customer ID.
  meta:
    id: spc_318259a688aa444097a2c596d72da17a
    created: 1757257675377
    modified: 1757259432687
