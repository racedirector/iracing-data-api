/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Telemetry from the iRacing Simulation.
 */
export interface Telemetry {
  SessionTime?: number;
  SessionTick?: number;
  SessionNum?: number;
  SessionState?: SessionState;
  SessionUniqueID?: number;
  /**
   * Bitwise field for `Flags`
   */
  SessionFlags?: number;
  SessionTimeRemain?: number;
  SessionLapsRemain?: number;
  SessionLapsRemainEx?: number;
  SessionTimeTotal?: number;
  SessionLapsTotal?: number;
  SessionJokerLapsRemain?: number;
  SessionOnJokerLap?: boolean;
  SessionTimeOfDay?: number;
  RadioTransmitCarIdx?: number;
  RadioTransmitRadioIdx?: number;
  RadioTransmitFrequencyIdx?: number;
  DisplayUnits?: number;
  DriverMarker?: boolean;
  PushToTalk?: boolean;
  PushToPass?: boolean;
  ManualBoost?: boolean;
  ManualNoBoost?: boolean;
  IsOnTrack?: boolean;
  IsReplayPlaying?: boolean;
  ReplayFrameNum?: number;
  ReplayFrameNumEnd?: number;
  IsDiskLoggingEnabled?: boolean;
  IsDiskLoggingActive?: boolean;
  FrameRate?: number;
  CpuUsageFG?: number;
  GpuUsage?: number;
  ChanAvgLatency?: number;
  ChanLatency?: number;
  ChanQuality?: number;
  ChanPartnerQuality?: number;
  CpuUsageBG?: number;
  ChanClockSkew?: number;
  MemPageFaultSec?: number;
  MemSoftPageFaultSec?: number;
  PlayerCarPosition?: number;
  PlayerCarClassPosition?: number;
  PlayerCarClass?: number;
  PlayerTrackSurface?: TrackLocation;
  PlayerTrackSurfaceMaterial?: TrackSurface;
  PlayerCarIdx?: number;
  PlayerCarTeamIncidentCount?: number;
  PlayerCarMyIncidentCount?: number;
  PlayerCarDriverIncidentCount?: number;
  PlayerCarWeightPenalty?: number;
  PlayerCarPowerAdjust?: number;
  PlayerCarDryTireSetLimit?: number;
  PlayerCarTowTime?: number;
  PlayerCarInPitStall?: boolean;
  PlayerCarPitSvStatus?: PitServiceStatus;
  PlayerTireCompound?: number;
  PlayerFastRepairsUsed?: number;
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxLap?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxLapCompleted?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxLapDistPct?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxTrackSurface?: TrackLocation[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxTrackSurfaceMaterial?: TrackSurface[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxOnPitRoad?: boolean[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxPosition?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxClassPosition?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxClass?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxF2Time?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxEstTime?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxLastLapTime?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxBestLapTime?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxBestLapNum?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxTireCompound?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxQualTireCompound?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxQualTireCompoundLocked?: boolean[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxFastRepairsUsed?: number[];
  /**
   * Bitwise field for `Flags`
   *
   * @minItems 64
   * @maxItems 64
   */
  CarIdxSessionFlags?: Flags[];
  PaceMode?: PaceMode;
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxPaceLine?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxPaceRow?: number[];
  /**
   * Bitwise field for `PaceFlags`
   *
   * @minItems 64
   * @maxItems 64
   */
  CarIdxPaceFlags?: PaceFlags[];
  OnPitRoad?: boolean;
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxSteer?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxRPM?: number[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxGear?: number[];
  SteeringWheelAngle?: number;
  Throttle?: number;
  Brake?: number;
  Clutch?: number;
  Gear?: number;
  RPM?: number;
  PlayerCarSLFirstRPM?: number;
  PlayerCarSLShiftRPM?: number;
  PlayerCarSLLastRPM?: number;
  PlayerCarSLBlinkRPM?: number;
  Lap?: number;
  LapCompleted?: number;
  LapDist?: number;
  LapDistPct?: number;
  RaceLaps?: number;
  CarDistAhead?: number;
  CarDistBehind?: number;
  LapBestLap?: number;
  LapBestLapTime?: number;
  LapLastLapTime?: number;
  LapCurrentLapTime?: number;
  LapLasNLapSeq?: number;
  LapLastNLapTime?: number;
  LapBestNLapLap?: number;
  LapBestNLapTime?: number;
  LapDeltaToBestLap?: number;
  LapDeltaToBestLap_DD?: number;
  LapDeltaToBestLap_OK?: boolean;
  LapDeltaToOptimalLap?: number;
  LapDeltaToOptimalLap_DD?: number;
  LapDeltaToOptimalLap_OK?: boolean;
  LapDeltaToSessionBestLap?: number;
  LapDeltaToSessionBestLap_DD?: number;
  LapDeltaToSessionBestLap_OK?: boolean;
  LapDeltaToSessionOptimalLap?: number;
  LapDeltaToSessionOptimalLap_DD?: number;
  LapDeltaToSessionOptimalLap_OK?: boolean;
  LapDeltaToSessionLastlLap?: number;
  LapDeltaToSessionLastlLap_DD?: number;
  LapDeltaToSessionLastlLap_OK?: boolean;
  Speed?: number;
  Yaw?: number;
  YawNorth?: number;
  Pitch?: number;
  Roll?: number;
  EnterExitReset?: number;
  TrackTemp?: number;
  TrackTempCrew?: number;
  AirTemp?: number;
  TrackWetness?: TrackWetness;
  Skies?: number;
  AirDensity?: number;
  AirPressure?: number;
  WindVel?: number;
  WindDir?: number;
  RelativeHumidity?: number;
  FogLevel?: number;
  Precipitation?: number;
  SolarAltitude?: number;
  SolarAzimuth?: number;
  WeatherDeclaredWet?: boolean;
  SteeringFFBEnabled?: boolean;
  DCLapStatus?: number;
  DCDriversSoFar?: number;
  OkToReloadTextures?: boolean;
  LoadNumTextures?: boolean;
  CarLeftRight?: CarLeftRight;
  PitsOpen?: boolean;
  VidCapEnabled?: boolean;
  VidCapActive?: boolean;
  PlayerIncidents?: number;
  PitRepairLeft?: number;
  PitOptRepairLeft?: number;
  PitstopActive?: boolean;
  FastRepairUsed?: number;
  FastRepairAvailable?: number;
  LFTiresUsed?: number;
  RFTiresUsed?: number;
  LRTiresUsed?: number;
  RRTiresUsed?: number;
  LeftTireSetsUsed?: number;
  RightTireSetsUsed?: number;
  FrontTireSetsUsed?: number;
  RearTireSetsUsed?: number;
  TireSetsUsed?: number;
  LFTiresAvailable?: number;
  RFTiresAvailable?: number;
  LRTiresAvailable?: number;
  RRTiresAvailable?: number;
  LeftTireSetsAvailable?: number;
  RightTireSetsAvailable?: number;
  FrontTireSetsAvailable?: number;
  RearTireSetsAvailable?: number;
  TireSetsAvailable?: number;
  CamCarIdx?: number;
  CamCameraNumber?: number;
  CamGroupNumber?: number;
  /**
   * Bitwise field for `CameraState`
   */
  CamCameraState?: number;
  IsOnTrackCar?: boolean;
  IsInGarage?: boolean;
  SteeringWheelAngleMax?: number;
  ShiftPowerPct?: number;
  ShiftGrindRPM?: number;
  ThrottleRaw?: number;
  BrakeRaw?: number;
  ClutchRaw?: number;
  HandbrakeRaw?: number;
  BrakeABSactive?: boolean;
  Shifter?: number;
  /**
   * Bitwise field for `EngineWarnings`
   */
  EngineWarnings?: number;
  FuelLevelPct?: number;
  /**
   * Bitwise field for `PitServiceFlags`
   */
  PitSvFlags?: number;
  PitSvLFP?: number;
  PitSvRFP?: number;
  PitSvLRP?: number;
  PitSvRRP?: number;
  PitSvFuel?: number;
  PitSvTireCompound?: number;
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxP2P_Status?: boolean[];
  /**
   * @minItems 64
   * @maxItems 64
   */
  CarIdxP2P_Count?: number[];
  P2P_Status?: boolean;
  P2P_Count?: number;
  SteeringWheelPctTorque?: number;
  SteeringWheelPctTorqueSign?: number;
  SteeringWheelPctTorqueSignStops?: number;
  SteeringWheelPctIntensity?: number;
  SteeringWheelPctSmoothing?: number;
  SteeringWheelPctDamper?: number;
  SteeringWheelLimiter?: number;
  SteeringWheelMaxForceNm?: number;
  SteeringWheelPeakForceNm?: number;
  SteeringWheelUseLinear?: boolean;
  ShiftIndicatorPct?: number;
  ReplayPlaySpeed?: number;
  ReplayPlaySlowMotion?: boolean;
  ReplaySessionTime?: number;
  ReplaySessionNum?: number;
  TireLF_RumblePitch?: number;
  TireRF_RumblePitch?: number;
  TireLR_RumblePitch?: number;
  TireRR_RumblePitch?: number;
  IsGarageVisible?: boolean;
  /**
   * @minItems 6
   * @maxItems 6
   */
  SteeringWheelTorque_ST?: number[];
  SteeringWheelTorque?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  VelocityZ_ST?: number[];
  /**
   * @minItems 6
   * @maxItems 6
   */
  VelocityY_ST?: number[];
  /**
   * @minItems 6
   * @maxItems 6
   */
  VelocityX_ST?: number[];
  VelocityZ?: number;
  VelocityY?: number;
  VelocityX?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  YawRate_ST?: number[];
  /**
   * @minItems 6
   * @maxItems 6
   */
  PitchRate_ST?: number[];
  /**
   * @minItems 6
   * @maxItems 6
   */
  RollRate_ST?: number[];
  YawRate?: number;
  PitchRate?: number;
  RollRate?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  VertAccel_ST?: number[];
  /**
   * @minItems 6
   * @maxItems 6
   */
  LatAccel_ST?: number[];
  /**
   * @minItems 6
   * @maxItems 6
   */
  LongAccel_ST?: number[];
  VertAccel?: number;
  LatAccel?: number;
  LongAccel?: number;
  dcStarter?: boolean;
  dcTractionControlToggle?: boolean;
  dcPitSpeedLimiterToggle?: boolean;
  dcHeadlightFlash?: boolean;
  dpRFTireChange?: number;
  dpLFTireChange?: number;
  dpRRTireChange?: number;
  dpLRTireChange?: number;
  dpFuelFill?: number;
  dpWindshieldTearoff?: number;
  dpFuelAddKg?: number;
  dpFastRepair?: number;
  dcBrakeBias?: number;
  dpLFTireColdPress?: number;
  dpRFTireColdPress?: number;
  dpLRTireColdPress?: number;
  dpRRTireColdPress?: number;
  dcDashPage?: number;
  dcTractionControl?: number;
  dcABS?: number;
  dpFuelAutoFillEnabled?: number;
  dpFuelAutoFillActive?: number;
  dcToggleWindshieldWipers?: boolean;
  dcTriggerWindshieldWipers?: boolean;
  FuelUsePerHour?: number;
  Voltage?: number;
  WaterTemp?: number;
  WaterLevel?: number;
  FuelPress?: number;
  OilTemp?: number;
  OilPress?: number;
  OilLevel?: number;
  ManifoldPress?: number;
  FuelLevel?: number;
  Engine0_RPM?: number;
  RFbrakeLinePress?: number;
  RFcoldPressure?: number;
  RFodometer?: number;
  RFtempCL?: number;
  RFtempCM?: number;
  RFtempCR?: number;
  RFwearL?: number;
  RFwearM?: number;
  RFwearR?: number;
  LFbrakeLinePress?: number;
  LFcoldPressure?: number;
  LFodometer?: number;
  LFtempCL?: number;
  LFtempCM?: number;
  LFtempCR?: number;
  LFwearL?: number;
  LFwearM?: number;
  LFwearR?: number;
  RRbrakeLinePress?: number;
  RRcoldPressure?: number;
  RRodometer?: number;
  RRtempCL?: number;
  RRtempCM?: number;
  RRtempCR?: number;
  RRwearL?: number;
  RRwearM?: number;
  RRwearR?: number;
  LRbrakeLinePress?: number;
  LRcoldPressure?: number;
  LRodometer?: number;
  LRtempCL?: number;
  LRtempCM?: number;
  LRtempCR?: number;
  LRwearL?: number;
  LRwearM?: number;
  LRwearR?: number;
  LRshockDefl?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  LRshockDefl_ST?: number[];
  LRshockVel?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  LRshockVel_ST?: number[];
  RRshockDefl?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  RRshockDefl_ST?: number[];
  RRshockVel?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  RRshockVel_ST?: number[];
  LFshockDefl?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  LFshockDefl_ST?: number[];
  LFshockVel?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  LFshockVel_ST?: number[];
  RFshockDefl?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  RFshockDefl_ST?: number[];
  RFshockVel?: number;
  /**
   * @minItems 6
   * @maxItems 6
   */
  RFshockVel_ST?: number[];
}

export const enum SessionState {
  invalid = 0,
  get_in_car = 1,
  warmup = 2,
  parade_laps = 3,
  racing = 4,
  checkered = 5,
  cool_down = 6
}
export const enum TrackLocation {
  not_in_world = -1,
  off_track = 0,
  in_pit_stall = 1,
  aproaching_pits = 2,
  on_track = 3
}
export const enum TrackSurface {
  not_in_world = -1,
  undefined = 0,
  asphalt_1 = 1,
  asphalt_2 = 2,
  asphalt_3 = 3,
  asphalt_4 = 4,
  concrete_1 = 5,
  concrete_2 = 6,
  racing_dirt_1 = 7,
  racing_dirt_2 = 8,
  paint_1 = 9,
  paint_2 = 10,
  rumble_1 = 11,
  rumble_2 = 12,
  rumble_3 = 13,
  rumble_4 = 14,
  grass_1 = 15,
  grass_2 = 16,
  grass_3 = 17,
  grass_4 = 18,
  dirt_1 = 19,
  dirt_2 = 20,
  dirt_3 = 21,
  dirt_4 = 22,
  sand = 23,
  gravel_1 = 24,
  gravel_2 = 25,
  grasscrete = 26,
  astroturf = 27
}
export const enum PitServiceStatus {
  none = 0,
  in_progress = 1,
  complete = 2,
  too_far_left = 100,
  too_far_right = 101,
  too_far_forward = 102,
  too_far_back = 103,
  bad_angle = 104,
  cant_fix_that = 105
}
export const enum Flags {
  checkered = 1,
  white = 2,
  green = 4,
  yellow = 8,
  red = 16,
  blue = 32,
  debris = 64,
  crossed = 128,
  yellow_waving = 256,
  one_lap_to_green = 512,
  green_held = 1024,
  ten_to_go = 2048,
  five_to_go = 4096,
  random_waving = 8192,
  caution = 16384,
  caution_waving = 32768,
  black = 65536,
  disqualify = 131072,
  servicible = 262144,
  furled = 524288,
  repair = 1048576,
  start_hidden = 268435456,
  start_ready = 536870912,
  start_set = 1073741824,
  start_go = 2147483648
}
export const enum PaceMode {
  single_file_start = 0,
  double_file_start = 1,
  single_file_restart = 2,
  double_file_restart = 3,
  not_pacing = 4
}
export const enum PaceFlags {
  end_of_line = 1,
  free_pass = 2,
  waved_around = 4
}
export const enum TrackWetness {
  unknown = 0,
  dry = 1,
  mostly_dry = 2,
  very_lightly_wet = 3,
  lightly_wet = 4,
  moderately_wet = 5,
  very_wet = 6,
  extremely_wet = 7
}
export const enum CarLeftRight {
  off = 0,
  clear = 1,
  car_left = 2,
  car_right = 3,
  car_left_right = 4,
  two_cars_left = 5,
  two_cars_right = 6
}
